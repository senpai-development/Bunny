# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, goverfl0w
# This file is distributed under the same license as the
# discord-interactions package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: discord-interactions 4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-09-25 12:17-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../api.http.rst:4
msgid "HTTP Client"
msgstr ""

#: interactions.api.http.Route:1 of
msgid "A class representing how an HTTP route is structured."
msgstr ""

#: interactions.api.http.Padlock interactions.api.http.Request
#: interactions.api.http.Route of
msgid "Variables"
msgstr ""

#: interactions.api.http.Route:3 of
msgid "The HTTP route path."
msgstr ""

#: interactions.api.http.Route:4 of
msgid "The HTTP method."
msgstr ""

#: interactions.api.http.Route:5 of
msgid "The URL path."
msgstr ""

#: interactions.api.http.Route:6 of
msgid "The channel ID from the bucket if given."
msgstr ""

#: interactions.api.http.Route:7 of
msgid "The guild ID from the bucket if given."
msgstr ""

#: interactions.api.http.Route.bucket:1 of
msgid "Returns the route's bucket."
msgstr ""

#: interactions.api.http.HTTPClient.add_guild_member
#: interactions.api.http.HTTPClient.batch_edit_application_command_permissions
#: interactions.api.http.HTTPClient.create_application_command
#: interactions.api.http.HTTPClient.create_channel
#: interactions.api.http.HTTPClient.create_channel_invite
#: interactions.api.http.HTTPClient.create_guild_from_guild_template
#: interactions.api.http.HTTPClient.create_guild_template
#: interactions.api.http.HTTPClient.create_stage_instance
#: interactions.api.http.HTTPClient.create_thread
#: interactions.api.http.HTTPClient.delete_guild_template
#: interactions.api.http.HTTPClient.edit_application_command
#: interactions.api.http.HTTPClient.edit_application_command_permissions
#: interactions.api.http.HTTPClient.edit_message
#: interactions.api.http.HTTPClient.edit_webhook_message
#: interactions.api.http.HTTPClient.execute_github_webhook
#: interactions.api.http.HTTPClient.execute_slack_webhook
#: interactions.api.http.HTTPClient.execute_webhook
#: interactions.api.http.HTTPClient.get_all_application_command_permissions
#: interactions.api.http.HTTPClient.get_all_channels
#: interactions.api.http.HTTPClient.get_all_emoji
#: interactions.api.http.HTTPClient.get_application_command_permissions
#: interactions.api.http.HTTPClient.get_channel_messages
#: interactions.api.http.HTTPClient.get_guild_templates
#: interactions.api.http.HTTPClient.get_guild_webhooks
#: interactions.api.http.HTTPClient.get_guild_widget_image
#: interactions.api.http.HTTPClient.get_guild_widget_settings
#: interactions.api.http.HTTPClient.get_list_of_members
#: interactions.api.http.HTTPClient.get_stage_instance
#: interactions.api.http.HTTPClient.get_webhook_message
#: interactions.api.http.HTTPClient.leave_guild
#: interactions.api.http.HTTPClient.list_public_archived_threads
#: interactions.api.http.HTTPClient.modify_guild_template
#: interactions.api.http.HTTPClient.modify_guild_welcome_screen
#: interactions.api.http.HTTPClient.modify_guild_widget
#: interactions.api.http.HTTPClient.modify_member
#: interactions.api.http.HTTPClient.modify_self_nick_in_guild
#: interactions.api.http.HTTPClient.modify_stage_instance
#: interactions.api.http.HTTPClient.modify_webhook
#: interactions.api.http.HTTPClient.move_channel
#: interactions.api.http.HTTPClient.overwrite_application_command
#: interactions.api.http.HTTPClient.publish_message
#: interactions.api.http.HTTPClient.sync_guild_template
#: interactions.api.http.Request.request interactions.api.http.Route.bucket of
msgid "Returns"
msgstr ""

#: interactions.api.http.Route.bucket:3 of
msgid "str"
msgstr ""

#: interactions.api.http.Padlock:1 of
msgid "A class representing ratelimited sessions as a \"locked\" event."
msgstr ""

#: interactions.api.http.Padlock:3 of
msgid "The lock coroutine event."
msgstr ""

#: interactions.api.http.Padlock:4 of
msgid "Whether the lock should stay open or not."
msgstr ""

#: interactions.api.http.Padlock.click:1 of
msgid "Re-closes the lock after the instiantiation and invocation ends."
msgstr ""

#: interactions.api.http.Request:1 of
msgid "A class representing how HTTP requests are sent/read."
msgstr ""

#: interactions.api.http.Request:3 of
msgid "The current application token."
msgstr ""

#: interactions.api.http.Request:4 of
msgid "The current coroutine event loop."
msgstr ""

#: interactions.api.http.Request:5 of
msgid "The current ratelimits from the Discord API."
msgstr ""

#: interactions.api.http.Request:6 of
msgid "The current headers for an HTTP request."
msgstr ""

#: interactions.api.http.Request:7 of
msgid "The current session for making requests."
msgstr ""

#: interactions.api.http.Request:8 of
msgid "The ratelimit lock event."
msgstr ""

#: interactions.api.http.Request.check_session:1 of
msgid "Ensures that we have a valid connection session."
msgstr ""

#: interactions.api.http.Request.request:1 of
msgid "Sends a request to the Discord API."
msgstr ""

#: interactions.api.http.HTTPClient.add_guild_member
#: interactions.api.http.HTTPClient.add_member_role
#: interactions.api.http.HTTPClient.batch_edit_application_command_permissions
#: interactions.api.http.HTTPClient.create_application_command
#: interactions.api.http.HTTPClient.create_channel
#: interactions.api.http.HTTPClient.create_channel_invite
#: interactions.api.http.HTTPClient.create_guild_from_guild_template
#: interactions.api.http.HTTPClient.create_guild_kick
#: interactions.api.http.HTTPClient.create_guild_template
#: interactions.api.http.HTTPClient.create_interaction_response
#: interactions.api.http.HTTPClient.create_message
#: interactions.api.http.HTTPClient.create_stage_instance
#: interactions.api.http.HTTPClient.create_thread
#: interactions.api.http.HTTPClient.delete_application_command
#: interactions.api.http.HTTPClient.delete_channel
#: interactions.api.http.HTTPClient.delete_channel_permission
#: interactions.api.http.HTTPClient.delete_guild
#: interactions.api.http.HTTPClient.delete_guild_template
#: interactions.api.http.HTTPClient.delete_stage_instance
#: interactions.api.http.HTTPClient.delete_webhook_message
#: interactions.api.http.HTTPClient.edit_application_command
#: interactions.api.http.HTTPClient.edit_application_command_permissions
#: interactions.api.http.HTTPClient.edit_channel_permission
#: interactions.api.http.HTTPClient.edit_message
#: interactions.api.http.HTTPClient.edit_webhook_message
#: interactions.api.http.HTTPClient.execute_github_webhook
#: interactions.api.http.HTTPClient.execute_slack_webhook
#: interactions.api.http.HTTPClient.execute_webhook
#: interactions.api.http.HTTPClient.get_all_application_command_permissions
#: interactions.api.http.HTTPClient.get_all_channels
#: interactions.api.http.HTTPClient.get_all_emoji
#: interactions.api.http.HTTPClient.get_application_command_permissions
#: interactions.api.http.HTTPClient.get_channel_messages
#: interactions.api.http.HTTPClient.get_guild_templates
#: interactions.api.http.HTTPClient.get_guild_widget_image
#: interactions.api.http.HTTPClient.get_guild_widget_settings
#: interactions.api.http.HTTPClient.get_list_of_members
#: interactions.api.http.HTTPClient.get_stage_instance
#: interactions.api.http.HTTPClient.get_webhook_message
#: interactions.api.http.HTTPClient.leave_guild
#: interactions.api.http.HTTPClient.list_public_archived_threads
#: interactions.api.http.HTTPClient.modify_current_user_voice_state
#: interactions.api.http.HTTPClient.modify_guild
#: interactions.api.http.HTTPClient.modify_guild_template
#: interactions.api.http.HTTPClient.modify_guild_welcome_screen
#: interactions.api.http.HTTPClient.modify_guild_widget
#: interactions.api.http.HTTPClient.modify_member
#: interactions.api.http.HTTPClient.modify_self_nick_in_guild
#: interactions.api.http.HTTPClient.modify_stage_instance
#: interactions.api.http.HTTPClient.modify_user_voice_state
#: interactions.api.http.HTTPClient.move_channel
#: interactions.api.http.HTTPClient.overwrite_application_command
#: interactions.api.http.HTTPClient.publish_message
#: interactions.api.http.HTTPClient.remove_all_reactions
#: interactions.api.http.HTTPClient.remove_member_role
#: interactions.api.http.HTTPClient.remove_user_reaction
#: interactions.api.http.HTTPClient.search_guild_members
#: interactions.api.http.HTTPClient.sync_guild_template
#: interactions.api.http.HTTPClient.trigger_typing
#: interactions.api.http.Request.request of
msgid "Parameters"
msgstr ""

#: interactions.api.http.Request.request:3 of
msgid "The HTTP route to request."
msgstr ""

#: interactions.api.http.Request.request:5 of
msgid "Optional keyword-only arguments to pass as information in the request."
msgstr ""

#: interactions.api.http.HTTPClient.leave_guild:4
#: interactions.api.http.Request.request:7 of
msgid "None"
msgstr ""

#: interactions.api.http.Request.close:1 of
msgid "Closes the current session."
msgstr ""

#: interactions.api.http.HTTPClient:1 of
msgid ""
"A WIP class that represents the http Client that handles all major "
"endpoints to Discord API."
msgstr ""

#: interactions.api.http.HTTPClient.get_gateway:1 of
msgid ""
"This calls the Gateway endpoint and returns a v9 gateway link with JSON "
"encoding."
msgstr ""

#: interactions.api.http.HTTPClient.get_bot_gateway:1 of
msgid ""
"This calls the BOT Gateway endpoint. :return: A tuple denoting (shard, "
"gateway_url), url from API v9 and JSON encoding"
msgstr ""

#: interactions.api.http.HTTPClient.login:1 of
msgid ""
"This 'logins' to the gateway, which makes it available to use any other "
"endpoint."
msgstr ""

#: interactions.api.http.HTTPClient.logout:1 of
msgid "This 'log outs' the session."
msgstr ""

#: interactions.api.http.HTTPClient.get_current_bot_information:1 of
msgid "Returns the bot user application object without flags."
msgstr ""

#: interactions.api.http.HTTPClient.get_current_authorisation_information:1 of
msgid "Returns info about the current authorization of the bot user"
msgstr ""

#: interactions.api.http.HTTPClient.get_voice_regions:1 of
msgid ""
"Gets a list from the API a list of voice regions. :return: An array of "
"Voice Region objects."
msgstr ""

#: interactions.api.http.HTTPClient.get_self:1 of
msgid "An alias to `get_user`, but only gets the current bot user."
msgstr ""

#: interactions.api.http.HTTPClient.get_self:3 of
msgid ""
":return A partial User object of the current bot user in the form of a "
"dictionary."
msgstr ""

#: interactions.api.http.HTTPClient.get_user:1 of
msgid ""
"Gets a user object for a given user ID. :param user_id: A user snowflake "
"ID. If omitted, this defaults to the current bot user. :return A partial "
"User object in the form of a dictionary."
msgstr ""

#: interactions.api.http.HTTPClient.modify_self:1 of
msgid "Modify the bot user account settings. :param payload: The data to send."
msgstr ""

#: interactions.api.http.HTTPClient.modify_self_nick_in_guild:1 of
msgid "Changes a nickname of the current bot user in a guild."
msgstr ""

#: interactions.api.http.HTTPClient.modify_self_nick_in_guild:3 of
msgid "Guild snowflake ID."
msgstr ""

#: interactions.api.http.HTTPClient.modify_self_nick_in_guild:4 of
msgid "The new nickname, if any."
msgstr ""

#: interactions.api.http.HTTPClient.modify_self_nick_in_guild:5 of
msgid "Nothing needed to be yielded."
msgstr ""

#: interactions.api.http.HTTPClient.create_dm:1 of
msgid ""
"Creates a new DM channel with a user. :param recipient_id: User snowflake"
" ID. :return: Returns a dictionary representing a DM Channel object."
msgstr ""

#: interactions.api.http.HTTPClient.send_message:1 of
msgid ""
"A higher level implementation of :meth:`create_message()` that handles "
"the payload dict internally. Does not integrate components into the "
"function, and is a port from v3.0.0"
msgstr ""

#: interactions.api.http.HTTPClient.create_message:1 of
msgid "Send a message to the specified channel."
msgstr ""

#: interactions.api.http.HTTPClient.create_message:3 of
msgid "Dictionary contents of a message. (i.e. message payload)"
msgstr ""

#: interactions.api.http.HTTPClient.create_message:4
#: interactions.api.http.HTTPClient.edit_message:3 of
msgid "Channel snowflake ID."
msgstr ""

#: interactions.api.http.HTTPClient.create_message of
msgid "return dict"
msgstr ""

#: interactions.api.http.HTTPClient.create_message:5 of
msgid "Dictionary representing a message (?)"
msgstr ""

#: interactions.api.http.HTTPClient.get_message:1 of
msgid ""
"Get a specific message in the channel. :param channel_id: the channel "
"this message belongs to :param message_id: the id of the message :return:"
" message if it exists."
msgstr ""

#: interactions.api.http.HTTPClient.delete_message:1 of
msgid ""
"Deletes a message from a specified channel :param channel_id: Channel "
"snowflake ID. :param message_id: Message snowflake ID. :param reason: "
"Optional reason to show up in the audit log. Defaults to `None`."
msgstr ""

#: interactions.api.http.HTTPClient.delete_messages:1 of
msgid ""
"Deletes messages from a specified channel :param channel_id: Channel "
"snowflake ID. :param message_ids: An array of message snowflake IDs. "
":param reason: Optional reason to show up in the audit log. Defaults to "
"`None`."
msgstr ""

#: interactions.api.http.HTTPClient.edit_message:1 of
msgid "Edits a message that already exists."
msgstr ""

#: interactions.api.http.HTTPClient.edit_message:4 of
msgid "Message snowflake ID."
msgstr ""

#: interactions.api.http.HTTPClient.edit_message:5 of
msgid "Any new data that needs to be changed."
msgstr ""

#: interactions.api.http.HTTPClient.edit_message:7 of
msgid "A message object with edited attributes."
msgstr ""

#: interactions.api.http.HTTPClient.pin_message:1 of
msgid ""
"Pin a message to a channel. :param channel_id: Channel ID snowflake. "
":param message_id: Message ID snowflake."
msgstr ""

#: interactions.api.http.HTTPClient.unpin_message:1 of
msgid ""
"Unpin a message to a channel :param channel_id: Channel ID snowflake. "
":param message_id: Message ID snowflake."
msgstr ""

#: interactions.api.http.HTTPClient.publish_message:1 of
msgid ""
"Publishes (API calls it crossposts) a message in a News channel to any "
"that is followed by."
msgstr ""

#: interactions.api.http.HTTPClient.publish_message:3 of
msgid "Channel the message is in"
msgstr ""

#: interactions.api.http.HTTPClient.publish_message:4 of
msgid "The id of the message to publish"
msgstr ""

#: interactions.api.http.HTTPClient.publish_message:5 of
msgid "message object"
msgstr ""

#: interactions.api.http.HTTPClient.get_self_guilds:1 of
msgid "Gets all guild objects associated with the current bot user."
msgstr ""

#: interactions.api.http.HTTPClient.get_self_guilds:3 of
msgid ":return a list of partial guild objects the current bot user is a part of."
msgstr ""

#: interactions.api.http.HTTPClient.get_guild:1 of
msgid ""
"Requests an individual guild from the API. :param guild_id: The guild "
"snowflake ID associated. :return: The guild object associated, if any."
msgstr ""

#: interactions.api.http.HTTPClient.get_guild_preview:1 of
msgid ""
"Get a guild's preview. :param guild_id: Guild ID snowflake. :return: "
"Guild Preview object associated with the snowflake"
msgstr ""

#: interactions.api.http.HTTPClient.modify_guild:1 of
msgid "Modifies a guild's attributes."
msgstr ""

#: interactions.api.http.HTTPClient.create_channel:4
#: interactions.api.http.HTTPClient.create_channel_invite:4
#: interactions.api.http.HTTPClient.create_guild_from_guild_template:4
#: interactions.api.http.HTTPClient.get_channel_messages:4
#: interactions.api.http.HTTPClient.modify_guild:4 of
msgid "..note::"
msgstr ""

#: interactions.api.http.HTTPClient.modify_guild:4 of
msgid ""
"This only sends the payload. You will have to check it when a higher-"
"level function calls this."
msgstr ""

#: interactions.api.http.HTTPClient.add_guild_member:3
#: interactions.api.http.HTTPClient.create_channel:6
#: interactions.api.http.HTTPClient.create_guild_template:3
#: interactions.api.http.HTTPClient.delete_guild:3
#: interactions.api.http.HTTPClient.delete_guild_template:3
#: interactions.api.http.HTTPClient.get_all_emoji:3
#: interactions.api.http.HTTPClient.get_guild_templates:3
#: interactions.api.http.HTTPClient.get_guild_widget_image:5
#: interactions.api.http.HTTPClient.get_guild_widget_settings:3
#: interactions.api.http.HTTPClient.modify_current_user_voice_state:3
#: interactions.api.http.HTTPClient.modify_guild:6
#: interactions.api.http.HTTPClient.modify_guild_template:3
#: interactions.api.http.HTTPClient.modify_guild_welcome_screen:3
#: interactions.api.http.HTTPClient.modify_guild_widget:3
#: interactions.api.http.HTTPClient.modify_member:5
#: interactions.api.http.HTTPClient.modify_user_voice_state:3
#: interactions.api.http.HTTPClient.move_channel:3
#: interactions.api.http.HTTPClient.search_guild_members:3
#: interactions.api.http.HTTPClient.sync_guild_template:3 of
msgid "Guild ID snowflake."
msgstr ""

#: interactions.api.http.HTTPClient.modify_guild:7 of
msgid "The parameters to change."
msgstr ""

#: interactions.api.http.HTTPClient.modify_guild:8 of
msgid "Reason to send to the audit log, if given."
msgstr ""

#: interactions.api.http.HTTPClient.leave_guild:1 of
msgid "Leaves a guild."
msgstr ""

#: interactions.api.http.HTTPClient.leave_guild:3 of
msgid "The guild snowflake ID associated."
msgstr ""

#: interactions.api.http.HTTPClient.delete_guild:1 of
msgid "Deletes a guild."
msgstr ""

#: interactions.api.http.HTTPClient.get_guild_widget:1 of
msgid ""
"Returns the widget for the guild. :param guild_id: Guild ID snowflake. "
":return: Guild Widget contents as a dict: {\"enabled\":bool, "
"\"channel_id\": str}"
msgstr ""

#: interactions.api.http.HTTPClient.get_guild_widget_settings:1 of
msgid "Get guild widget settings."
msgstr ""

#: interactions.api.http.HTTPClient.get_guild_widget_settings:4 of
msgid "Guild Widget contents as a dict: {\"enabled\":bool, \"channel_id\": str}"
msgstr ""

#: interactions.api.http.HTTPClient.get_guild_widget_image:1 of
msgid "Get a url representing a png image widget for the guild. ..note::"
msgstr ""

#: interactions.api.http.HTTPClient.get_guild_widget_image:6 of
msgid "The style of widget required, if given."
msgstr ""

#: interactions.api.http.HTTPClient.get_guild_widget_image:7 of
msgid "A url pointing to this image"
msgstr ""

#: interactions.api.http.HTTPClient.modify_guild_widget:1 of
msgid "Modify a guild widget."
msgstr ""

#: interactions.api.http.HTTPClient.modify_guild_widget:4 of
msgid "Payload containing new widget attributes."
msgstr ""

#: interactions.api.http.HTTPClient.modify_guild_widget:5 of
msgid "Updated widget attributes."
msgstr ""

#: interactions.api.http.HTTPClient.get_guild_invites:1 of
msgid ""
"Retrieves a list of invite objects with their own metadata. :param "
"guild_id: Guild ID snowflake. :return: A list of invite objects"
msgstr ""

#: interactions.api.http.HTTPClient.get_guild_welcome_screen:1 of
msgid ""
"Retrieves from the API a welcome screen associated with the guild :param "
"guild_id: Guild ID snowflake. :return: Welcome Screen object"
msgstr ""

#: interactions.api.http.HTTPClient.modify_guild_welcome_screen:1 of
msgid "Modify the guild's welcome screen."
msgstr ""

#: interactions.api.http.HTTPClient.modify_guild_welcome_screen:4 of
msgid "Whether the welcome screen is enabled or not."
msgstr ""

#: interactions.api.http.HTTPClient.modify_guild_welcome_screen:5 of
msgid ""
"The new channels (by their ID) linked in the welcome screen and their "
"display options"
msgstr ""

#: interactions.api.http.HTTPClient.modify_guild_welcome_screen:6 of
msgid "The new server description to show in the welcome screen"
msgstr ""

#: interactions.api.http.HTTPClient.modify_guild_welcome_screen:7 of
msgid "Updated Welcome screen object."
msgstr ""

#: interactions.api.http.HTTPClient.get_guild_integrations:1 of
msgid ""
"Gets a list of integration objects associated with the Guild from the "
"API. :param guild_id: Guild ID snowflake. :return: An array of "
"integration objects"
msgstr ""

#: interactions.api.http.HTTPClient.delete_guild_integration:1 of
msgid ""
"Deletes an integration from the guild. :param guild_id: Guild ID "
"snowflake. :param integration_id: Integration ID snowflake."
msgstr ""

#: interactions.api.http.HTTPClient.modify_current_user_voice_state:1 of
msgid "Update the current user voice state."
msgstr ""

#: interactions.api.http.HTTPClient.modify_current_user_voice_state:4
#: interactions.api.http.HTTPClient.modify_user_voice_state:5 of
msgid "Voice channel ID snowflake."
msgstr ""

#: interactions.api.http.HTTPClient.modify_current_user_voice_state:5 of
msgid "Toggle the user's suppress state, if given."
msgstr ""

#: interactions.api.http.HTTPClient.modify_current_user_voice_state:6 of
msgid "Sets the user's request to speak, if given."
msgstr ""

#: interactions.api.http.HTTPClient.modify_user_voice_state:1 of
msgid "Modify the voice state of a user."
msgstr ""

#: interactions.api.http.HTTPClient.add_guild_member:4
#: interactions.api.http.HTTPClient.modify_user_voice_state:4 of
msgid "User ID snowflake."
msgstr ""

#: interactions.api.http.HTTPClient.modify_user_voice_state:6 of
msgid "Toggles the user's suppress state, if given."
msgstr ""

#: interactions.api.http.HTTPClient.create_guild_from_guild_template:1 of
msgid "Create a a new guild based on a template."
msgstr ""

#: interactions.api.http.HTTPClient.create_guild_from_guild_template:4 of
msgid "This endpoint can only be used by bots in less than 10 guilds."
msgstr ""

#: interactions.api.http.HTTPClient.create_guild_from_guild_template:6 of
msgid "The code of the template to use."
msgstr ""

#: interactions.api.http.HTTPClient.create_guild_from_guild_template:7 of
msgid "The name of the guild (2-100 characters)"
msgstr ""

#: interactions.api.http.HTTPClient.create_guild_from_guild_template:8 of
msgid "Guild icon URI, if given."
msgstr ""

#: interactions.api.http.HTTPClient.create_guild_from_guild_template:9 of
msgid "The newly created guild object."
msgstr ""

#: interactions.api.http.HTTPClient.get_guild_templates:1 of
msgid "Returns an array of guild templates."
msgstr ""

#: interactions.api.http.HTTPClient.get_guild_templates:4 of
msgid "An array of guild templates"
msgstr ""

#: interactions.api.http.HTTPClient.create_guild_template:1 of
msgid "Create a guild template for the guild."
msgstr ""

#: interactions.api.http.HTTPClient.create_guild_template:4
#: interactions.api.http.HTTPClient.modify_guild_template:5 of
msgid "The name of the template"
msgstr ""

#: interactions.api.http.HTTPClient.create_guild_template:5 of
msgid "The description of the template, if given."
msgstr ""

#: interactions.api.http.HTTPClient.create_guild_template:6 of
msgid "The created guild template"
msgstr ""

#: interactions.api.http.HTTPClient.sync_guild_template:1 of
msgid "Sync the template to the guild's current state."
msgstr ""

#: interactions.api.http.HTTPClient.sync_guild_template:4 of
msgid "The code for the template to sync"
msgstr ""

#: interactions.api.http.HTTPClient.sync_guild_template:5 of
msgid "The updated guild template."
msgstr ""

#: interactions.api.http.HTTPClient.modify_guild_template:1 of
msgid "Modify a guild template."
msgstr ""

#: interactions.api.http.HTTPClient.delete_guild_template:4
#: interactions.api.http.HTTPClient.modify_guild_template:4 of
msgid "Template ID."
msgstr ""

#: interactions.api.http.HTTPClient.modify_guild_template:6 of
msgid "The description of the template"
msgstr ""

#: interactions.api.http.HTTPClient.modify_guild_template:7 of
msgid "The updated guild template"
msgstr ""

#: interactions.api.http.HTTPClient.delete_guild_template:1 of
msgid "Delete the guild template."
msgstr ""

#: interactions.api.http.HTTPClient.delete_guild_template:5 of
msgid "The deleted template object"
msgstr ""

#: interactions.api.http.HTTPClient.get_all_channels:1 of
msgid "Requests from the API to get all channels in the guild."
msgstr ""

#: interactions.api.http.HTTPClient.get_all_channels:3 of
msgid "Guild Snowflake ID"
msgstr ""

#: interactions.api.http.HTTPClient.get_all_channels:4 of
msgid "A list of channels."
msgstr ""

#: interactions.api.http.HTTPClient.get_all_roles:1 of
msgid ""
"Gets all roles from a Guild. :param guild_id: Guild ID snowflake :return:"
" An array of Role objects."
msgstr ""

#: interactions.api.http.HTTPClient.create_guild_role:1 of
msgid ""
"Create a new role for the guild. :param guild_id: Guild ID snowflake. "
":param data: A dict containing metadata for the role. :param reason: The "
"reason for this action, if given. :return: Role object"
msgstr ""

#: interactions.api.http.HTTPClient.modify_guild_role_position:1 of
msgid ""
"Modify the position of a role in the guild. :param guild_id: Guild ID "
"snowflake. :param role_id: Role ID snowflake. :param position: The new "
"position of the associated role. :param reason: The reason for this "
"action, if given. :return: List of guild roles with updated hierarchy."
msgstr ""

#: interactions.api.http.HTTPClient.modify_guild_role:1 of
msgid ""
"Modify a given role for the guild. :param guild_id: Guild ID snowflake. "
":param role_id: Role ID snowflake. :param data: A dict containing updated"
" metadata for the role. :param reason: The reason for this action, if "
"given. :return: Updated role object."
msgstr ""

#: interactions.api.http.HTTPClient.delete_guild_role:1 of
msgid ""
"Delete a guild role. :param guild_id: Guild ID snowflake. :param role_id:"
" Role ID snowflake. :param reason: The reason for this action, if any."
msgstr ""

#: interactions.api.http.HTTPClient.create_guild_kick:1 of
msgid "Kicks a person from the guild."
msgstr ""

#: interactions.api.http.HTTPClient.batch_edit_application_command_permissions:4
#: interactions.api.http.HTTPClient.create_guild_kick:3
#: interactions.api.http.HTTPClient.edit_application_command_permissions:4
#: interactions.api.http.HTTPClient.get_all_application_command_permissions:4
#: interactions.api.http.HTTPClient.get_application_command_permissions:4
#: interactions.api.http.HTTPClient.get_list_of_members:3 of
msgid "Guild ID snowflake"
msgstr ""

#: interactions.api.http.HTTPClient.create_guild_kick:4 of
msgid "User ID snowflake"
msgstr ""

#: interactions.api.http.HTTPClient.create_guild_kick:5 of
msgid "Optional Reason argument."
msgstr ""

#: interactions.api.http.HTTPClient.create_guild_ban:1 of
msgid ""
"Bans a person from the guild, and optionally deletes previous messages "
"sent by them. :param guild_id: Guild ID snowflake :param user_id: User ID"
" snowflake :param delete_message_days: Number of days to delete messages,"
" from 0 to 7. Defaults to 0 :param reason: Optional reason to ban."
msgstr ""

#: interactions.api.http.HTTPClient.remove_guild_ban:1 of
msgid ""
"Unbans someone using the API. :param guild_id: Guild ID snowflake :param "
"user_id: User ID snowflake :param reason: Optional reason to unban."
msgstr ""

#: interactions.api.http.HTTPClient.get_guild_bans:1 of
msgid ""
"Gets a list of banned users. :param guild_id: Guild ID snowflake. "
":return: A list of banned users."
msgstr ""

#: interactions.api.http.HTTPClient.get_user_ban:1 of
msgid ""
"Gets an object pertaining to the user, if it exists. Returns a 404 if it "
"doesn't. :param guild_id: Guild ID snowflake :param user_id: User ID "
"snowflake. :return: Ban object if it exists."
msgstr ""

#: interactions.api.http.HTTPClient.add_guild_member:1 of
msgid ""
"A low level method of adding a user to a guild with pre-defined "
"attributes."
msgstr ""

#: interactions.api.http.HTTPClient.add_guild_member:5 of
msgid "User access token."
msgstr ""

#: interactions.api.http.HTTPClient.add_guild_member:6 of
msgid "User's nickname on join."
msgstr ""

#: interactions.api.http.HTTPClient.add_guild_member:7 of
msgid "An array of roles that the user is assigned."
msgstr ""

#: interactions.api.http.HTTPClient.add_guild_member:8 of
msgid "Whether the user is mute in voice channels."
msgstr ""

#: interactions.api.http.HTTPClient.add_guild_member:9 of
msgid "Whether the user is deafened in voice channels."
msgstr ""

#: interactions.api.http.HTTPClient.add_guild_member:10 of
msgid "Guild member object (?)"
msgstr ""

#: interactions.api.http.HTTPClient.remove_guild_member:1 of
msgid ""
"A low level method of removing a member from a guild. This is different "
"from banning them. :param guild_id: Guild ID snowflake. :param user_id: "
"User ID snowflake. :param reason: Reason to send to audit log, if any."
msgstr ""

#: interactions.api.http.HTTPClient.get_guild_prune_count:1 of
msgid ""
"Retrieves a dict from an API that results in how many members would be "
"pruned given the amount of days. :param guild_id: Guild ID snowflake. "
":param days:  Number of days to count. Defaults to ``7``. :param "
"include_roles: Role IDs to include, if given. :return: A dict denoting "
"`{\"pruned\": int}`"
msgstr ""

#: interactions.api.http.HTTPClient.get_member:1 of
msgid ""
"Uses the API to fetch a member from a guild. :param guild_id: Guild ID "
"snowflake. :param member_id: Member ID snowflake. :return: A member "
"object, if any."
msgstr ""

#: interactions.api.http.HTTPClient.get_list_of_members:1 of
msgid "Lists the members of a guild."
msgstr ""

#: interactions.api.http.HTTPClient.get_list_of_members:4 of
msgid "How many members to get from the API. Max is 1000. Defaults to 1."
msgstr ""

#: interactions.api.http.HTTPClient.get_list_of_members:5 of
msgid "Get Member IDs after this snowflake. Defaults to None."
msgstr ""

#: interactions.api.http.HTTPClient.get_list_of_members:6 of
msgid "An array of Member objects."
msgstr ""

#: interactions.api.http.HTTPClient.search_guild_members:1 of
msgid ""
"Search a guild for members who's username or nickname starts with "
"provided string."
msgstr ""

#: interactions.api.http.HTTPClient.search_guild_members:4 of
msgid "The string to search for"
msgstr ""

#: interactions.api.http.HTTPClient.search_guild_members:5 of
msgid "The number of members to return. Defaults to 1."
msgstr ""

#: interactions.api.http.HTTPClient.add_member_role:1 of
msgid "Adds a role to a guild member."
msgstr ""

#: interactions.api.http.HTTPClient.add_member_role:3
#: interactions.api.http.HTTPClient.remove_member_role:3 of
msgid "The ID of the guild"
msgstr ""

#: interactions.api.http.HTTPClient.add_member_role:4
#: interactions.api.http.HTTPClient.remove_member_role:4 of
msgid "The ID of the user"
msgstr ""

#: interactions.api.http.HTTPClient.add_member_role:5
#: interactions.api.http.HTTPClient.remove_member_role:5 of
msgid "The ID of the role to add"
msgstr ""

#: interactions.api.http.HTTPClient.add_member_role:6
#: interactions.api.http.HTTPClient.remove_member_role:6 of
msgid "The reason for this action. Defaults to None."
msgstr ""

#: interactions.api.http.HTTPClient.remove_member_role:1 of
msgid "Removes a role to a guild member."
msgstr ""

#: interactions.api.http.HTTPClient.modify_member:1 of
msgid ""
"Edits a member. This can nick them, change their roles, mute/deafen (and "
"its contrary), and moving them across channels and/or disconnect them"
msgstr ""

#: interactions.api.http.HTTPClient.modify_member:4 of
msgid "Member ID snowflake."
msgstr ""

#: interactions.api.http.HTTPClient.modify_member:6 of
msgid "Payload representing parameters (nick, roles, mute, deaf, channel_id)"
msgstr ""

#: interactions.api.http.HTTPClient.modify_member:7 of
msgid "? (modified voice state? not sure)"
msgstr ""

#: interactions.api.http.HTTPClient.get_channel:1 of
msgid ""
"Gets a channel by ID. If the channel is a thread, it also includes thread"
" members (and other thread attributes) :param channel_id: Channel ID "
"snowflake. :return: Channel object."
msgstr ""

#: interactions.api.http.HTTPClient.delete_channel:1 of
msgid "Deletes a channel."
msgstr ""

#: interactions.api.http.HTTPClient.delete_channel:3 of
msgid "Channel ID snowflake"
msgstr ""

#: interactions.api.http.HTTPClient.get_channel_messages:1 of
msgid "Get messages from a channel."
msgstr ""

#: interactions.api.http.HTTPClient.get_channel_messages:4 of
msgid "around, before, and after arguments are mutually exclusive."
msgstr ""

#: interactions.api.http.HTTPClient.create_channel_invite:6
#: interactions.api.http.HTTPClient.create_stage_instance:3
#: interactions.api.http.HTTPClient.delete_channel_permission:3
#: interactions.api.http.HTTPClient.delete_stage_instance:3
#: interactions.api.http.HTTPClient.edit_channel_permission:3
#: interactions.api.http.HTTPClient.get_channel_messages:6
#: interactions.api.http.HTTPClient.get_stage_instance:3
#: interactions.api.http.HTTPClient.modify_stage_instance:3
#: interactions.api.http.HTTPClient.move_channel:4
#: interactions.api.http.HTTPClient.trigger_typing:5 of
msgid "Channel ID snowflake."
msgstr ""

#: interactions.api.http.HTTPClient.get_channel_messages:7 of
msgid "How many messages to get. Defaults to 50, the max is 100."
msgstr ""

#: interactions.api.http.HTTPClient.get_channel_messages:8 of
msgid "Get messages around this snowflake ID."
msgstr ""

#: interactions.api.http.HTTPClient.get_channel_messages:9 of
msgid "Get messages before this snowflake ID."
msgstr ""

#: interactions.api.http.HTTPClient.get_channel_messages:10 of
msgid "Get messages after this snowflake ID."
msgstr ""

#: interactions.api.http.HTTPClient.get_channel_messages:11 of
msgid "An array of Message objects."
msgstr ""

#: interactions.api.http.HTTPClient.create_channel:1 of
msgid "Creates a channel within a guild."
msgstr ""

#: interactions.api.http.HTTPClient.create_channel:4 of
msgid "This does not handle payload in this method. Tread carefully."
msgstr ""

#: interactions.api.http.HTTPClient.create_channel:7 of
msgid "Payload data."
msgstr ""

#: interactions.api.http.HTTPClient.create_channel:8 of
msgid "Reason to show in audit log, if needed."
msgstr ""

#: interactions.api.http.HTTPClient.create_channel:9 of
msgid "Channel object."
msgstr ""

#: interactions.api.http.HTTPClient.move_channel:1 of
msgid "Moves a channel to a new position."
msgstr ""

#: interactions.api.http.HTTPClient.move_channel:5 of
msgid "The new channel position."
msgstr ""

#: interactions.api.http.HTTPClient.move_channel:6 of
msgid "The category parent ID, if needed."
msgstr ""

#: interactions.api.http.HTTPClient.move_channel:7 of
msgid ""
"Sync permissions with the parent associated with parent_id. Defaults to "
"False."
msgstr ""

#: interactions.api.http.HTTPClient.move_channel:8 of
msgid "Reason to display to the audit log, if any."
msgstr ""

#: interactions.api.http.HTTPClient.execute_github_webhook:7
#: interactions.api.http.HTTPClient.execute_slack_webhook:7
#: interactions.api.http.HTTPClient.move_channel:9 of
msgid "?"
msgstr ""

#: interactions.api.http.HTTPClient.modify_channel:1 of
msgid ""
"Update a channel's settings. :param channel_id: Channel ID snowflake. "
":param data: Data representing updated settings. :param reason: Reason, "
"if any. :return: Channel with updated attributes, if successful."
msgstr ""

#: interactions.api.http.HTTPClient.get_channel_invites:1 of
msgid ""
"Get the invites for the channel. :param channel_id: Channel ID snowflake."
" :return: List of invite objects"
msgstr ""

#: interactions.api.http.HTTPClient.create_channel_invite:1 of
msgid "Creates an invite for the given channel."
msgstr ""

#: interactions.api.http.HTTPClient.create_channel_invite:4 of
msgid "This method does not handle payload. It just sends it."
msgstr ""

#: interactions.api.http.HTTPClient.create_channel_invite:7 of
msgid "Data representing the payload/invite attributes."
msgstr ""

#: interactions.api.http.HTTPClient.create_channel_invite:8 of
msgid "Reason to show in the audit log, if any."
msgstr ""

#: interactions.api.http.HTTPClient.create_channel_invite:9 of
msgid "An invite object."
msgstr ""

#: interactions.api.http.HTTPClient.delete_invite:1 of
msgid ""
"Delete an invite. :param invite_code: The code of the invite to delete "
":param reason: Reason to show in the audit log, if any. :return: The "
"deleted invite object"
msgstr ""

#: interactions.api.http.HTTPClient.edit_channel_permission:1 of
msgid ""
"Edits the channel's permission overwrites for a user or role in a given "
"channel."
msgstr ""

#: interactions.api.http.HTTPClient.delete_channel_permission:4
#: interactions.api.http.HTTPClient.edit_channel_permission:4 of
msgid "The ID of the overridden object."
msgstr ""

#: interactions.api.http.HTTPClient.edit_channel_permission:5 of
msgid "the bitwise value of all allowed permissions"
msgstr ""

#: interactions.api.http.HTTPClient.edit_channel_permission:6 of
msgid "the bitwise value of all disallowed permissions"
msgstr ""

#: interactions.api.http.HTTPClient.edit_channel_permission:7 of
msgid "0 for a role or 1 for a member"
msgstr ""

#: interactions.api.http.HTTPClient.delete_channel_permission:5
#: interactions.api.http.HTTPClient.edit_channel_permission:8 of
msgid "Reason to display in the Audit Log, if given."
msgstr ""

#: interactions.api.http.HTTPClient.delete_channel_permission:1 of
msgid "Deletes a channel permission overwrite for a user or role in a channel."
msgstr ""

#: interactions.api.http.HTTPClient.trigger_typing:1 of
msgid "Posts \"... is typing\" in a given channel."
msgstr ""

#: interactions.api.http.HTTPClient.create_interaction_response:4
#: interactions.api.http.HTTPClient.overwrite_application_command:4
#: interactions.api.http.HTTPClient.trigger_typing:3 of
msgid "..note:"
msgstr ""

#: interactions.api.http.HTTPClient.trigger_typing:4 of
msgid ""
"By default, this lib doesn't use this endpoint, however, this is listed "
"for third-party implementation."
msgstr ""

#: interactions.api.http.HTTPClient.get_pinned_messages:1 of
msgid ""
"Get all pinned messages from a channel. :param channel_id: Channel ID "
"snowflake. :return: A list of pinned message objects."
msgstr ""

#: interactions.api.http.HTTPClient.create_stage_instance:1 of
msgid "Create a new stage instance."
msgstr ""

#: interactions.api.http.HTTPClient.create_stage_instance:4 of
msgid "The topic of the stage instance. Limited to 1-120 characters."
msgstr ""

#: interactions.api.http.HTTPClient.create_stage_instance:5 of
msgid "The privacy_level of the stage instance (defaults to guild-only \"1\")."
msgstr ""

#: interactions.api.http.HTTPClient.create_stage_instance:6
#: interactions.api.http.HTTPClient.delete_stage_instance:4
#: interactions.api.http.HTTPClient.modify_stage_instance:6 of
msgid "The reason for the creating the stage instance, if any."
msgstr ""

#: interactions.api.http.HTTPClient.create_stage_instance:7 of
msgid "The new stage instance"
msgstr ""

#: interactions.api.http.HTTPClient.get_stage_instance:1 of
msgid "Get the stage instance associated with a given channel, if it exists."
msgstr ""

#: interactions.api.http.HTTPClient.get_stage_instance:4 of
msgid "A stage instance."
msgstr ""

#: interactions.api.http.HTTPClient.modify_stage_instance:1 of
msgid "Update the fields of a given stage instance."
msgstr ""

#: interactions.api.http.HTTPClient.modify_stage_instance:4 of
msgid ""
"The new topic of the stage instance, if given. Limited to 1-120 "
"characters."
msgstr ""

#: interactions.api.http.HTTPClient.modify_stage_instance:5 of
msgid "The new privacy_level of the stage instance."
msgstr ""

#: interactions.api.http.HTTPClient.modify_stage_instance:7 of
msgid "The updated stage instance."
msgstr ""

#: interactions.api.http.HTTPClient.delete_stage_instance:1 of
msgid "Delete a stage instance."
msgstr ""

#: interactions.api.http.HTTPClient.join_thread:1 of
msgid "Have the bot user join a thread. :param thread_id: The thread to join."
msgstr ""

#: interactions.api.http.HTTPClient.leave_thread:1 of
msgid "Have the bot user leave a thread. :param thread_id: The thread to leave."
msgstr ""

#: interactions.api.http.HTTPClient.add_member_to_thread:1 of
msgid ""
"Add another user to a thread. :param thread_id: The ID of the thread "
":param user_id: The ID of the user to add"
msgstr ""

#: interactions.api.http.HTTPClient.remove_member_from_thread:1 of
msgid ""
"Remove another user from a thread. :param thread_id: The ID of the thread"
" :param user_id: The ID of the user to remove"
msgstr ""

#: interactions.api.http.HTTPClient.list_thread_members:1 of
msgid ""
"Get a list of members in the thread. :param thread_id: the id of the "
"thread :return: a list of member objects"
msgstr ""

#: interactions.api.http.HTTPClient.list_public_archived_threads:1 of
msgid "Get a list of archived public threads in a given channel."
msgstr ""

#: interactions.api.http.HTTPClient.list_public_archived_threads:3 of
msgid "The channel to get threads from"
msgstr ""

#: interactions.api.http.HTTPClient.list_public_archived_threads:4 of
msgid "Optional limit of threads to"
msgstr ""

#: interactions.api.http.HTTPClient.list_public_archived_threads:5 of
msgid "Get threads before this Thread snowflake ID"
msgstr ""

#: interactions.api.http.HTTPClient.list_public_archived_threads:6 of
msgid "a list of threads"
msgstr ""

#: interactions.api.http.HTTPClient.list_private_archived_threads:1 of
msgid ""
"Get a list of archived private threads in a channel. :param channel_id: "
"The channel to get threads from :param limit: Optional limit of threads "
"to :param before: Get threads before this Thread snowflake ID :return: a "
"list of threads"
msgstr ""

#: interactions.api.http.HTTPClient.list_joined_private_archived_threads:1 of
msgid ""
"Get a list of archived private threads in a channel that the bot has "
"joined. :param channel_id: The channel to get threads from :param limit: "
"Optional limit of threads to :param before: Get threads before this "
"snowflake ID :return: a list of threads"
msgstr ""

#: interactions.api.http.HTTPClient.list_active_threads:1 of
msgid ""
"List active threads within a guild. :param guild_id: the guild id to get "
"threads from :return: A list of active threads"
msgstr ""

#: interactions.api.http.HTTPClient.create_thread:1 of
msgid ""
"From a given channel, create a Thread with an optional message to start "
"with.."
msgstr ""

#: interactions.api.http.HTTPClient.create_thread:3 of
msgid "The ID of the channel to create this thread in"
msgstr ""

#: interactions.api.http.HTTPClient.create_thread:4 of
msgid "The name of the thread"
msgstr ""

#: interactions.api.http.HTTPClient.create_thread:5 of
msgid ""
"duration in minutes to automatically archive the thread after recent "
"activity, can be set to: 60, 1440, 4320, 10080"
msgstr ""

#: interactions.api.http.HTTPClient.create_thread:7 of
msgid ""
"The type of thread, defaults to public. ignored if creating thread from a"
" message"
msgstr ""

#: interactions.api.http.HTTPClient.create_thread:8 of
msgid "Boolean to display if the Thread is open to join or private."
msgstr ""

#: interactions.api.http.HTTPClient.create_thread:9 of
msgid "An optional message to create a thread from."
msgstr ""

#: interactions.api.http.HTTPClient.create_thread:10 of
msgid "An optional reason for the audit log"
msgstr ""

#: interactions.api.http.HTTPClient.create_thread:11 of
msgid "The created thread"
msgstr ""

#: interactions.api.http.HTTPClient.create_reaction:1 of
msgid ""
"Create a reaction for a message. :param channel_id: Channel snowflake ID."
" :param message_id: Message snowflake ID. :param emoji: The emoji to use "
"(format: `name:id`)"
msgstr ""

#: interactions.api.http.HTTPClient.remove_self_reaction:1 of
msgid ""
"Remove bot user's reaction from a message. :param channel_id: Channel "
"snowflake ID. :param message_id: Message snowflake ID. :param emoji: The "
"emoji to remove (format: `name:id`)"
msgstr ""

#: interactions.api.http.HTTPClient.remove_user_reaction:1 of
msgid "Remove user's reaction from a message"
msgstr ""

#: interactions.api.http.HTTPClient.remove_user_reaction:3 of
msgid "The channel this is taking place in"
msgstr ""

#: interactions.api.http.HTTPClient.remove_user_reaction:4 of
msgid "The message to remove the reaction on."
msgstr ""

#: interactions.api.http.HTTPClient.remove_user_reaction:5 of
msgid "The emoji to remove. (format: `name:id`)"
msgstr ""

#: interactions.api.http.HTTPClient.remove_user_reaction:6 of
msgid "The user to remove reaction of."
msgstr ""

#: interactions.api.http.HTTPClient.remove_all_reactions:1 of
msgid "Remove all reactions from a message."
msgstr ""

#: interactions.api.http.HTTPClient.remove_all_reactions:3 of
msgid "The channel this is taking place in."
msgstr ""

#: interactions.api.http.HTTPClient.remove_all_reactions:4 of
msgid "The message to clear reactions from."
msgstr ""

#: interactions.api.http.HTTPClient.remove_all_reactions_of_emoji:1 of
msgid ""
"Remove all reactions of a certain emoji from a message. :param "
"channel_id: Channel snowflake ID. :param message_id: Message snowflake "
"ID. :param emoji: The emoji to remove (format: `name:id`)"
msgstr ""

#: interactions.api.http.HTTPClient.get_reactions_of_emoji:1 of
msgid ""
"Gets the users who reacted to the emoji. :param channel_id: Channel "
"snowflake ID. :param message_id: Message snowflake ID. :param emoji: The "
"emoji to get (format: `name:id`) :return A list of users who sent that "
"emoji."
msgstr ""

#: interactions.api.http.HTTPClient.get_sticker:1 of
msgid ""
"Get a specific sticker. :param sticker_id: The id of the sticker :return:"
" Sticker or None"
msgstr ""

#: interactions.api.http.HTTPClient.list_nitro_sticker_packs:1 of
msgid ""
"Gets the list of sticker packs available to Nitro subscribers. :return: "
"List of sticker packs"
msgstr ""

#: interactions.api.http.HTTPClient.list_guild_stickers:1 of
msgid ""
"Get the stickers for a guild. :param guild_id: The guild to get stickers "
"from :return: List of Stickers or None"
msgstr ""

#: interactions.api.http.HTTPClient.get_guild_sticker:1 of
msgid ""
"Get a sticker from a guild. :param guild_id: The guild to get stickers "
"from :param sticker_id: The sticker to get from the guild :return: "
"Sticker or None"
msgstr ""

#: interactions.api.http.HTTPClient.create_guild_sticker:1 of
msgid ""
"Create a new sticker for the guild. Requires the "
"MANAGE_EMOJIS_AND_STICKERS permission. :param payload: the payload to "
"send. :param guild_id: The guild to create sticker at. :param reason: The"
" reason for this action. :return: The new sticker data on success."
msgstr ""

#: interactions.api.http.HTTPClient.modify_guild_sticker:1 of
msgid ""
"Modify the given sticker. Requires the MANAGE_EMOJIS_AND_STICKERS "
"permission. :param payload: the payload to send. :param guild_id: The "
"guild of the target sticker. :param sticker_id:  The sticker to modify. "
":param reason: The reason for this action. :return: The updated sticker "
"data on success."
msgstr ""

#: interactions.api.http.HTTPClient.delete_guild_sticker:1 of
msgid ""
"Delete the given sticker. Requires the MANAGE_EMOJIS_AND_STICKERS "
"permission. :param guild_id: The guild of the target sticker. :param "
"sticker_id:  The sticker to delete. :param reason: The reason for this "
"action. :return: Returns 204 No Content on success."
msgstr ""

#: interactions.api.http.HTTPClient.get_application_command:1 of
msgid ""
"Get all application commands from an application :param application_id: "
"Application ID snowflake :param guild_id: Guild to get commands from, if "
"specified. Defaults to global (None) :return: A list of Application "
"commands."
msgstr ""

#: interactions.api.http.HTTPClient.create_application_command:1 of
msgid "Registers to the Discord API an application command."
msgstr ""

#: interactions.api.http.HTTPClient.batch_edit_application_command_permissions:3
#: interactions.api.http.HTTPClient.create_application_command:3
#: interactions.api.http.HTTPClient.create_interaction_response:6
#: interactions.api.http.HTTPClient.edit_application_command_permissions:3
#: interactions.api.http.HTTPClient.get_all_application_command_permissions:3
#: interactions.api.http.HTTPClient.get_application_command_permissions:3
#: interactions.api.http.HTTPClient.overwrite_application_command:6 of
msgid "Application ID snowflake"
msgstr ""

#: interactions.api.http.HTTPClient.create_application_command:4
#: interactions.api.http.HTTPClient.overwrite_application_command:7 of
msgid "The dictionary that contains the command (name, description, etc)"
msgstr ""

#: interactions.api.http.HTTPClient.create_application_command:5
#: interactions.api.http.HTTPClient.overwrite_application_command:8 of
msgid "Guild ID snowflake to put them in, if applicable."
msgstr ""

#: interactions.api.http.HTTPClient.create_application_command:6 of
msgid "An application command object."
msgstr ""

#: interactions.api.http.HTTPClient.overwrite_application_command:1 of
msgid ""
"Overwrites application command(s) from a scope to the new, updated "
"commands."
msgstr ""

#: interactions.api.http.HTTPClient.overwrite_application_command:4 of
msgid ""
"This applies to all forms of application commands (slash and context "
"menus)"
msgstr ""

#: interactions.api.http.HTTPClient.overwrite_application_command:9 of
msgid "An array of application command objects."
msgstr ""

#: interactions.api.http.HTTPClient.edit_application_command:1 of
msgid "Edits an application command."
msgstr ""

#: interactions.api.http.HTTPClient.delete_application_command:3
#: interactions.api.http.HTTPClient.edit_application_command:3 of
msgid "Application ID snowflake."
msgstr ""

#: interactions.api.http.HTTPClient.edit_application_command:4 of
msgid "A dictionary containing updated attributes"
msgstr ""

#: interactions.api.http.HTTPClient.edit_application_command:5 of
msgid "The application command ID snowflake"
msgstr ""

#: interactions.api.http.HTTPClient.edit_application_command:6 of
msgid "Guild ID snowflake, if given. Defaults to None/global."
msgstr ""

#: interactions.api.http.HTTPClient.edit_application_command:7 of
msgid "The updated application command object."
msgstr ""

#: interactions.api.http.HTTPClient.delete_application_command:1 of
msgid "Deletes an application command."
msgstr ""

#: interactions.api.http.HTTPClient.delete_application_command:4 of
msgid "Application command ID snowflake."
msgstr ""

#: interactions.api.http.HTTPClient.delete_application_command:5 of
msgid "Guild ID snowflake, if declared. Defaults to None (Global)."
msgstr ""

#: interactions.api.http.HTTPClient.edit_application_command_permissions:1 of
msgid "Edits permissions for an application command"
msgstr ""

#: interactions.api.http.HTTPClient.edit_application_command_permissions:5 of
msgid "Application command ID snowflake"
msgstr ""

#: interactions.api.http.HTTPClient.edit_application_command_permissions:6 of
msgid "Permission data."
msgstr ""

#: interactions.api.http.HTTPClient.edit_application_command_permissions:7 of
msgid "Returns an updated Application Guild permission object."
msgstr ""

#: interactions.api.http.HTTPClient.batch_edit_application_command_permissions:1
#: of
msgid "Edits permissions for all Application Commands in a guild."
msgstr ""

#: interactions.api.http.HTTPClient.batch_edit_application_command_permissions:5
#: of
msgid "An array of permission dictionaries."
msgstr ""

#: interactions.api.http.HTTPClient.batch_edit_application_command_permissions:6
#: of
msgid "An updated array of application array permissions."
msgstr ""

#: interactions.api.http.HTTPClient.get_application_command_permissions:1 of
msgid ""
"Gets, from the Discord API, permissions from a specific Guild application"
" command."
msgstr ""

#: interactions.api.http.HTTPClient.get_application_command_permissions:5 of
msgid "Application Command ID snowflake"
msgstr ""

#: interactions.api.http.HTTPClient.get_application_command_permissions:6 of
msgid "a Guild Application Command permissions object"
msgstr ""

#: interactions.api.http.HTTPClient.get_all_application_command_permissions:1
#: of
msgid ""
"Gets, from the Discord API, permissions from all Application commands at "
"that Guild."
msgstr ""

#: interactions.api.http.HTTPClient.get_all_application_command_permissions:5
#: of
msgid "An array of Guild Application Command permissions"
msgstr ""

#: interactions.api.http.HTTPClient.create_interaction_response:1 of
msgid "Posts initial response to an interaction."
msgstr ""

#: interactions.api.http.HTTPClient.create_interaction_response:4 of
msgid "Internally handles token for you."
msgstr ""

#: interactions.api.http.HTTPClient.create_interaction_response:7 of
msgid "The data to send."
msgstr ""

#: interactions.api.http.HTTPClient.get_original_interaction_response:1 of
msgid ""
"Gets an existing interaction message. :param application_id: Application "
"ID snowflake. :param message_id: Message ID snowflake. Defaults to "
"`@original` which represents the initial response msg. :return: Message "
"data."
msgstr ""

#: interactions.api.http.HTTPClient.edit_interaction_response:1 of
msgid ""
"Edits an existing interaction message. :param data: A dictionary "
"containing the new response. :param application_id: Application ID "
"snowflake. :param message_id: Message ID snowflake. Defaults to "
"`@original` which represents the initial response msg. :return: Updated "
"message data."
msgstr ""

#: interactions.api.http.HTTPClient.create_webhook:1 of
msgid ""
"Create a new webhook. :param channel_id: Channel ID snowflake. :param "
"name: Name of the webhook (1-80 characters) :param avatar: The image for "
"the default webhook avatar, if given."
msgstr ""

#: interactions.api.http.HTTPClient.create_webhook:6 of
msgid ":return Webhook object"
msgstr ""

#: interactions.api.http.HTTPClient.get_channel_webhooks:1 of
msgid ""
"Return a list of channel webhook objects. :param channel_id: Channel ID "
"snowflake. :return:List of webhook objects"
msgstr ""

#: interactions.api.http.HTTPClient.get_guild_webhooks:1 of
msgid ""
"Return a list of guild webhook objects. :param guild_id: Guild ID "
"snowflake"
msgstr ""

#: interactions.api.http.HTTPClient.get_guild_webhooks:4 of
msgid "List of webhook objects"
msgstr ""

#: interactions.api.http.HTTPClient.get_webhook:1 of
msgid ""
"Return the new webhook object for the given id. :param webhook_id: "
"Webhook ID snowflake. :param webhook_token: Webhook Token, if given."
msgstr ""

#: interactions.api.http.HTTPClient.get_webhook:5 of
msgid ":return:Webhook object"
msgstr ""

#: interactions.api.http.HTTPClient.modify_webhook:1 of
msgid ""
"Modify a webhook. :param webhook_id: Webhook ID snowflake :param name: "
"the default name of the webhook :param avatar: image for the default "
"webhook avatar :param channel_id: Channel ID snowflake of new destination"
" :param webhook_token: The token for the webhook, if given."
msgstr ""

#: interactions.api.http.HTTPClient.modify_webhook:8 of
msgid "Modified webhook object."
msgstr ""

#: interactions.api.http.HTTPClient.delete_webhook:1 of
msgid ""
"Delete a webhook :param webhook_id: Webhook ID snowflake. :param "
"webhook_token: The token for the webhook, if given."
msgstr ""

#: interactions.api.http.HTTPClient.execute_webhook:1 of
msgid "Sends a message as a webhook."
msgstr ""

#: interactions.api.http.HTTPClient.delete_webhook_message:3
#: interactions.api.http.HTTPClient.edit_webhook_message:3
#: interactions.api.http.HTTPClient.execute_github_webhook:3
#: interactions.api.http.HTTPClient.execute_slack_webhook:3
#: interactions.api.http.HTTPClient.execute_webhook:3
#: interactions.api.http.HTTPClient.get_webhook_message:3 of
msgid "Webhook ID snowflake."
msgstr ""

#: interactions.api.http.HTTPClient.execute_github_webhook:4
#: interactions.api.http.HTTPClient.execute_slack_webhook:4
#: interactions.api.http.HTTPClient.execute_webhook:4 of
msgid "The token for the webhook."
msgstr ""

#: interactions.api.http.HTTPClient.execute_github_webhook:5
#: interactions.api.http.HTTPClient.execute_slack_webhook:5
#: interactions.api.http.HTTPClient.execute_webhook:5 of
msgid "Payload consisting of the message."
msgstr ""

#: interactions.api.http.HTTPClient.execute_webhook:6 of
msgid ""
"A bool that signifies waiting for server confirmation of a send before "
"responding."
msgstr ""

#: interactions.api.http.HTTPClient.execute_webhook:7 of
msgid "Optional, sends a message to the specified thread."
msgstr ""

#: interactions.api.http.HTTPClient.execute_webhook:8 of
msgid "The message sent, if wait=True, else None."
msgstr ""

#: interactions.api.http.HTTPClient.execute_slack_webhook:1 of
msgid "Sends a message to a Slack-compatible webhook."
msgstr ""

#: interactions.api.http.HTTPClient.execute_slack_webhook:10 of
msgid ""
"Payload structure is different than Discord's. See `here "
"<https://api.slack.com/messaging/webhooks>_` for more details."
msgstr ""

#: interactions.api.http.HTTPClient.execute_github_webhook:1 of
msgid "Sends a message to a Github-compatible webhook."
msgstr ""

#: interactions.api.http.HTTPClient.execute_github_webhook:10 of
msgid ""
"Payload structure is different than Discord's. See `here "
"<https://discord.com/developers/docs/resources/webhook#execute-"
"githubcompatible-webhook>_` for more details."
msgstr ""

#: interactions.api.http.HTTPClient.get_webhook_message:1 of
msgid "Retrieves a message sent from a Webhook."
msgstr ""

#: interactions.api.http.HTTPClient.delete_webhook_message:4
#: interactions.api.http.HTTPClient.edit_webhook_message:4
#: interactions.api.http.HTTPClient.get_webhook_message:4 of
msgid "Webhook token."
msgstr ""

#: interactions.api.http.HTTPClient.get_webhook_message:5 of
msgid "Message ID snowflake,"
msgstr ""

#: interactions.api.http.HTTPClient.get_webhook_message:6 of
msgid "A Message object."
msgstr ""

#: interactions.api.http.HTTPClient.edit_webhook_message:1 of
msgid "Edits a message sent from a Webhook."
msgstr ""

#: interactions.api.http.HTTPClient.delete_webhook_message:5
#: interactions.api.http.HTTPClient.edit_webhook_message:5 of
msgid "Message ID snowflake."
msgstr ""

#: interactions.api.http.HTTPClient.edit_webhook_message:6 of
msgid "A payload consisting of new message attributes."
msgstr ""

#: interactions.api.http.HTTPClient.edit_webhook_message:7 of
msgid "An updated message object."
msgstr ""

#: interactions.api.http.HTTPClient.delete_webhook_message:1 of
msgid "Deletes a message object."
msgstr ""

#: interactions.api.http.HTTPClient.get_all_emoji:1 of
msgid "Gets all emojis from a guild."
msgstr ""

#: interactions.api.http.HTTPClient.get_all_emoji:4 of
msgid "A list of emojis."
msgstr ""

#: interactions.api.http.HTTPClient.get_guild_emoji:1 of
msgid ""
"Gets an emote from a guild. :param guild_id: Guild ID snowflake. :param "
"emoji_id: Emoji ID snowflake. :return: Emoji object"
msgstr ""

#: interactions.api.http.HTTPClient.create_guild_emoji:1 of
msgid ""
"Creates an emoji. :param guild_id: Guild ID snowflake. :param data: Emoji"
" parameters. :param reason: Optionally, give a reason. :return: An emoji "
"object with the included parameters."
msgstr ""

#: interactions.api.http.HTTPClient.modify_guild_emoji:1 of
msgid ""
"Modifies an emoji. :param guild_id: Guild ID snowflake. :param emoji_id: "
"Emoji ID snowflake :param data: Emoji parameters with updated attributes "
":param reason: Optionally, give a reason. :return: An emoji object with "
"updated attributes."
msgstr ""

#: interactions.api.http.HTTPClient.delete_guild_emoji:1 of
msgid ""
"Deletes an emoji. :param guild_id: Guild ID snowflake. :param emoji_id: "
"Emoji ID snowflake :param reason: Optionally, give a reason."
msgstr ""
