# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, goverfl0w
# This file is distributed under the same license as the
# discord-interactions package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: discord-interactions 4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-09-25 12:17-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../faq.rst:2
msgid "Frequently Asked Questions"
msgstr ""

#: ../../faq.rst:4
msgid ""
"Got a question about our library? Well, your answer is probably laying "
"somewhere around here."
msgstr ""

#: ../../faq.rst:8
msgid ""
"This page is maintained by the Helpers of the Discord server, and updated"
" by the library developer at their discretion. For any comments, feedback"
" or concerns please consider joining our server and bringing it up in our"
" support channels."
msgstr ""

#: ../../faq.rst:15
msgid ""
"This FAQ list currently reflects v4.0 as of the time of this writing, all"
" other versions are considered deprecated. Because of this, there will "
"not be any answers for questions regarding v3.0 and below."
msgstr ""

#: ../../faq.rst:20
msgid "discord.py is dead! Will this library die too?"
msgstr ""

#: ../../faq.rst:21 ../../faq.rst:31
msgid "The short answer is: **no**."
msgstr ""

#: ../../faq.rst:23
msgid ""
"The decision to become a standalone library that is now an API wrapper "
"for the Discord API was made before Danny posted his gist on GitHub about"
" ceasing development of discord.py. This is the official statement from "
"the library developer regarding this:"
msgstr ""

#: ../../faq.rst:30
msgid "Are you going to/will/consider fork(ing) discord.py?"
msgstr ""

#: ../../faq.rst:33
msgid ""
"The long answer is a list of numerous reasons as to why this decision was"
" made:"
msgstr ""

#: ../../faq.rst:35
msgid ""
"There are/will be numerous forks out there for discord.py, and because of"
" that, we cannot safely guarantee our ability to help users out who may "
"be using their own form of modified code."
msgstr ""

#: ../../faq.rst:36
msgid ""
"The original purpose of this library was to act as an extension of "
"discord.py, but due to the issue of constantly having to monkeypatch "
"solutions into their codebase to keep our library working introduced "
"extreme technical debt. Forking discord.py and building off of it does "
"not change anything from our issue of avoiding this."
msgstr ""

#: ../../faq.rst:37
msgid ""
"The goal of this library is to solely implement support and integrate the"
" use of interactions from the Discord API. Making this library unique in "
"a sense that we only do this seemed reasonable and within our margin of "
"standards at the time."
msgstr ""

#: ../../faq.rst:38
msgid ""
"The message intent will inevitably be forced as a privileged intent in "
"April 2022. The practicality of trying to support message commands will "
"be infeasible since Discord Developers have `already admitted`_ that "
"\"not wanting to implement application commands\" will not be a valid "
"reason for applying for this privileged intent."
msgstr ""

#: ../../faq.rst:39
msgid ""
"Forking discord.py would be a massive change to our current codebase, "
"throwing away all of the effort we've put into it so far, and basically "
"just be rewriting how v2.0a was created. That would make it nothing more "
"than discord.py-interactions at that point -- plus, we're already a "
"library that keeps very similar naming conventions as discord.py does, so"
" this is pointless."
msgstr ""

#: ../../faq.rst:42
msgid "Will discord.py be able to work with this library?"
msgstr ""

#: ../../faq.rst:43
msgid "The short answer is: **yes.**"
msgstr ""

#: ../../faq.rst:45
msgid ""
"However, the term \"work\" is loosely structured here. Imagine it like "
"taping a hole in the wall instead of repairing the wall. We're "
"essentially \"plastering\" support for discord.py instead of doing the "
"surgery on its internal organs to make it work well with our library. As "
"it currently stands, **discord-interactions and discord.py** are API "
"wrappers. You will be able to run code *alongside* one another, and you "
"will be able to plug in some classes, but the data conversion **must be "
"exact.**"
msgstr ""

#: ../../faq.rst:50
msgid "What does that mean? Well, we'll show you:"
msgstr ""

#: ../../faq.rst:74
msgid ""
"Both of these variables ``interactions`` and ``dpy`` will be able to run "
"in the same established environment, and additionally will both function "
"properly as their respective libraries intend them to. What about the "
"models, though? That's a simple answer:"
msgstr ""

#: ../../faq.rst:90
msgid ""
"Both of these will be able to both run and give their proper value. It is"
" *very* important to note here, though, that you **must** be returning "
"back the exact same information that our objects depend on. A missing "
"class instance can easily lead to it breaking, hence the \"plastering\" "
"that is going on here."
msgstr ""

#: ../../faq.rst:95
msgid "Why are you not supporting cooldowns?"
msgstr ""

#: ../../faq.rst:96
msgid ""
"Cooldowns aren't really an actual feature of the Discord API itself, but "
"rather more of a convienent feature implemented in discord.py in order to"
" avoid spamming of commands."
msgstr ""

#: ../../faq.rst:99
msgid "**What if people spam slash/sub commands?**"
msgstr ""

#: ../../faq.rst:101
msgid ""
"That's the neat part: it's really hard to do that, and most of the time, "
"they won't. Unless they copy the exact string that was used when you open"
" up the UI element to do it numerous times, most users do and will not be"
" able to know how to do this. However, if you as a bot developer feel at "
"unease about this, you are more than welcome to implement your own "
"cooldown methods yourself. Cooldowns were an ultimatum that came as the "
"result of message commands being able to be spammable, and since we won't"
" be supporting them, there's no feasibility to having them in our "
"library."
msgstr ""

#: ../../faq.rst:108
msgid "Will we not be able to create message commands?"
msgstr ""

#: ../../faq.rst:109
msgid ""
"This is a tricky question to really answer. If you want the *technical* "
"answer: you can definitely create them with our library, however, you'll "
"have to program them in the ``on_message_create`` listener event that we "
"use. This is already something a majority of discord.py bot developers "
"frown upon doing, so this is at your own risk to code your own command "
"handlers into it. Luckily, you can take a page out of discord.js' book if"
" you want to do this, since they've never heard of an external command "
"handler framework before in their entire life."
msgstr ""

#: ../../faq.rst:118
msgid "My question is not answered on here!"
msgstr ""

#: ../../faq.rst:119
msgid ""
"Please join our Discord server for any further support regarding our "
"library and/or any integration code depending on it."
msgstr ""

#: ../../faq.rst:121
msgid "Invite Link: https://discord.gg/KkgMBVuEkx"
msgstr ""
